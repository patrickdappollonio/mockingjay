# Template Examples Configuration
# Demonstrates different template types with inline content instead of external files

routes:
  # Dashboard page with HTML template
  - path: "/dashboard"
    method: "GET"
    template: |
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Mockingjay Dashboard</title>
          <style>
              body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                     background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                     margin: 0; padding: 20px; color: #333; }
              .container { max-width: 1200px; margin: 0 auto; background: white;
                          border-radius: 12px; padding: 30px; box-shadow: 0 8px 32px rgba(0,0,0,0.1); }
              .header { border-bottom: 2px solid #667eea; padding-bottom: 20px; margin-bottom: 30px; }
              .metrics { display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                        gap: 20px; margin-bottom: 30px; }
              .metric { background: #f8f9ff; padding: 20px; border-radius: 8px; text-align: center; }
              .metric-value { font-size: 2em; font-weight: bold; color: #667eea; }
              .request-info { background: #f8f9ff; padding: 20px; border-radius: 8px; }
          </style>
      </head>
      <body>
          <div class="container">
              <div class="header">
                  <h1>ðŸŽ¯ Mockingjay Dashboard</h1>
                  <p>Real-time request monitoring and server metrics</p>
              </div>

              <div class="metrics">
                  <div class="metric">
                      <div class="metric-value">{{ randInt 150 500 }}</div>
                      <div>Active Sessions</div>
                  </div>
                  <div class="metric">
                      <div class="metric-value">{{ randInt 5 25 }}ms</div>
                      <div>Response Time</div>
                  </div>
                  <div class="metric">
                      <div class="metric-value">{{ randInt 95 100 }}%</div>
                      <div>Uptime</div>
                  </div>
              </div>

              <div class="request-info">
                  <h3>Current Request Details</h3>
                  <p><strong>Method:</strong> {{ .Request.Method }}</p>
                  <p><strong>Path:</strong> {{ .Request.URL.Path }}</p>
                  <p><strong>User Agent:</strong> {{ .Headers.Get "User-Agent" | trunc 50 }}...</p>
                  <p><strong>Timestamp:</strong> {{ now | date "2006-01-02 15:04:05" }}</p>
              </div>
          </div>
      </body>
      </html>
    response_headers:
      Content-Type: "text/html; charset=utf-8"
      X-Dashboard-Version: "1.0"

  # JSON API response template
  - path: "/api/info"
    method: "GET"
    template: |
      {
        "status": "success",
        "timestamp": "{{ now | date "2006-01-02T15:04:05Z07:00" }}",
        "request_id": "{{ uuidv4 }}",
        "method": "{{ .Request.Method }}",
        "path": "{{ .Request.URL.Path }}",
        "data": {
          {{- if .Query }}
          "query_parameters": {
            {{- range $key, $value := .Query }}
            "{{ $key }}": "{{ $value }}"{{ if not (last $.Query) }},{{ end }}
            {{- end }}
          },
          {{- end }}
          {{- if .Body }}
          "request_body": {{ .Body | toJson }},
          {{- end }}
          "server_info": {
            "processing_time": "{{ randInt 5 50 }}ms",
            "server_instance": "mockingjay-{{ randAlphaNum 8 | lower }}",
            "version": "1.0.0"
          }
        }
      }
    response_headers:
      Content-Type: "application/json"
      X-API-Version: "2.0"

  # API with POST data
  - path: "/api/data"
    method: "POST"
    template: |
      {
        "status": "success",
        "timestamp": "{{ now | date "2006-01-02T15:04:05Z07:00" }}",
        "request_id": "{{ uuidv4 }}",
        "method": "{{ .Request.Method }}",
        "path": "{{ .Request.URL.Path }}",
        "data": {
          {{- if .Body }}
          "received_data": {{ .Body | toJson }},
          {{- end }}
          "server_info": {
            "processing_time": "{{ randInt 5 50 }}ms",
            "server_instance": "mockingjay-{{ randAlphaNum 8 | lower }}"
          }
        }
      }
    response_headers:
      Content-Type: "application/json"

  # Log format endpoint
  - path: "/logs"
    method: "GET"
    template: |
      [{{ now | date "2006-01-02 15:04:05" }}] {{ .Request.Method | upper | printf "%-7s" }} {{ .Request.URL.Path }}
      Request ID: {{ uuidv4 }}
      User Agent: {{ .Headers.Get "User-Agent" | default "Unknown" }}
      {{- if .Headers.Authorization }}
      Auth: {{ .Headers.Authorization | trunc 20 }}...
      {{- else }}
      Auth: None
      {{- end }}
      {{- if .Query }}

      Query Parameters:
      {{- range $key, $value := .Query }}
        {{ $key }}: {{ $value }}
      {{- end }}
      {{- end }}
      {{- if .Body }}

      Request Body:
      {{ .Body | toPrettyJson | indent 2 }}
      {{- end }}

      Server Info:
        Instance: mockingjay-{{ randAlphaNum 6 | lower }}
        Processing Time: {{ randInt 1 100 }}ms
        Active Connections: {{ randInt 1 50 }}

      Response Generated: {{ now | date "2006-01-02T15:04:05Z07:00" }}
      ---
    response_headers:
      Content-Type: "text/plain"

  # Simple error page
  - path: "/^/error/(?P<code>\\d+)$/"
    method: "GET"
    template: |
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>{{ .Params.code | default "404" }} - Error</title>
          <style>
              body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                     background: linear-gradient(135deg, #ff6b6b, #ee5a24); margin: 0; padding: 20px;
                     min-height: 100vh; display: flex; align-items: center; justify-content: center; }
              .error-container { background: white; border-radius: 16px; padding: 40px; text-align: center;
                                box-shadow: 0 8px 32px rgba(0,0,0,0.2); max-width: 500px; }
              h1 { color: #e74c3c; font-size: 3em; margin: 0 0 20px 0; }
              p { color: #666; font-size: 1.2em; margin-bottom: 30px; }
          </style>
      </head>
      <body>
          <div class="error-container">
              <h1>{{ .Params.code | default "404" }}</h1>
              <p>{{ if eq (.Params.code | default "404") "404" }}Page not found{{ else }}Something went wrong{{ end }}</p>
              <p>Request: {{ .Request.Method }} {{ .Request.URL.Path }}</p>
              <p>Time: {{ now | date "15:04:05" }}</p>
          </div>
      </body>
      </html>
    response_headers:
      Content-Type: "text/html; charset=utf-8"

  # 404 fallback using error template
  - path: "/^.*$/"
    method: "GET"
    template: |
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <title>404 - Page Not Found</title>
          <style>
              body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                     background: #f8f9fa; margin: 0; padding: 20px; min-height: 100vh;
                     display: flex; align-items: center; justify-content: center; }
              .container { background: white; border-radius: 8px; padding: 40px; text-align: center;
                          box-shadow: 0 2px 10px rgba(0,0,0,0.1); max-width: 500px; }
              h1 { color: #e74c3c; margin-bottom: 20px; }
          </style>
      </head>
      <body>
          <div class="container">
              <h1>404 - Page Not Found</h1>
              <p>The requested path "{{ .Request.URL.Path }}" was not found.</p>
              <p>Time: {{ now | date "15:04:05" }}</p>
          </div>
      </body>
      </html>
    response_headers:
      Content-Type: "text/html; charset=utf-8"
